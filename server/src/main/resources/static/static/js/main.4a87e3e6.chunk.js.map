{"version":3,"sources":["resources/home_otter_red_background.png","components/SimpleImage.tsx","components/HeaderMenu.tsx","components/LandingSection.tsx","components/RegisterSection.tsx","components/LoginForm.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","SimpleImage","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this$props","mode","src","height","width","style","objectWithoutProperties","size","fill","fit","important","backgroundImage","concat","backgroundSize","backgroundPosition","backgroundRepeat","react_default","a","createElement","assign","objectSpread","Component","defaultProps","HeaderMenu","position","zIndex","navbar","className","Group","align","Alignment","LEFT","Heading","href","SimpleImage_SimpleImage","logo_red","RIGHT","buttons","icon","iconSize","text","LandingSection","id","components_HeaderMenu","RegisterSection","_this","onSubmit","_ref","asyncToGenerator","regenerator_default","mark","_callee","e","_submitSuccessful","wrap","_context","prev","next","preventDefault","validateForm","submitForm","submitSuccessful","sent","setState","state","stop","_x","apply","arguments","email","firstName","lastName","password","onInputChange","bind","assertThisInitialized","onToastDismissed","event","target","currentTarget","console","log","name","value","includes","defineProperty","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","passwordHash","response","status","_context2","t0","card","elevation","Elevation","ONE","formGroup","inputGroup","onChange","leftIcon","placeholder","type","toaster","toast","message","intent","Intent","SUCCESS","onDismiss","timeout","DANGER","LoginSection","_loginSuccessful","loginSuccessful","App","components_LandingSection","components_RegisterSection","LoginForm","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4a87e3e6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/home_otter_red_background.ed422ee0.png\";","import React, { Component } from 'react';\r\n\r\nexport interface SimpleImageProps {\r\n    mode?: 'fill' | 'fit';\r\n    src?: string;\r\n    height?: number;\r\n    width?: number;\r\n    style?: React.CSSProperties;\r\n}\r\n\r\nexport interface SimpleImageState {\r\n}\r\n\r\nexport default class SimpleImage extends Component<SimpleImageProps, SimpleImageState> {\r\n    static defaultProps: SimpleImageProps;\r\n\r\n    constructor(props: SimpleImageProps) {\r\n        super(props)\r\n    }\r\n\r\n    public render() {\r\n        const { mode, src, height, width, style, ...props } = this.props\r\n        const modes = {\r\n            'fill': 'cover',\r\n            'fit': 'contain'\r\n        };\r\n        const size = modes[mode || 'fit'];\r\n\r\n        const important = {\r\n            backgroundImage: `url('${src}')`,\r\n            backgroundSize: size,\r\n            backgroundPosition: 'center center',\r\n            backgroundRepeat: 'no-repeat',\r\n            width: width,\r\n            height: height,\r\n        };\r\n\r\n        return <div {...props} style={{ ...style, ...important }} />\r\n    }\r\n}\r\n\r\nSimpleImage.defaultProps = {\r\n    height: 60,\r\n    width: 60,\r\n    mode: 'fit',\r\n};","import React, { Component } from 'react';\r\nimport '../scss/HeaderMenu.scss';\r\nimport logo_red from '../resources/home_otter_red_background.png';\r\nimport SimpleImage from './SimpleImage'\r\n\r\nimport {\r\n    Alignment,\r\n    Button,\r\n    Classes,\r\n    H5,\r\n    Navbar,\r\n    NavbarDivider,\r\n    NavbarGroup,\r\n    NavbarHeading,\r\n    Switch,\r\n    Icon,\r\n} from \"@blueprintjs/core\";\r\n\r\nclass HeaderMenu extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\r\n                <Navbar className=\"navbar\">\r\n                    <Navbar.Group align={Alignment.LEFT}>\r\n                        <Navbar.Heading>\r\n                            <a href=\"/\">\r\n                                <SimpleImage src={logo_red} />\r\n                            </a>\r\n                        </Navbar.Heading>\r\n                    </Navbar.Group>\r\n                    <Navbar.Group align={Alignment.RIGHT}>\r\n                        <Button className=\"bp3-minimal\" icon={<Icon icon=\"new-person\" iconSize={20} />} text=\"Register\" />\r\n                        <Button className=\"bp3-minimal\" icon={<Icon icon=\"log-in\" iconSize={20} />} text=\"Login\" />\r\n                    </Navbar.Group>\r\n                </Navbar>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeaderMenu;","import React, { Component } from 'react';\r\nimport '../scss/LandingSection.scss';\r\n\r\nimport HeaderMenu from './HeaderMenu';\r\n\r\nclass LandingSection extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <section id=\"landing-section\">\r\n                <HeaderMenu />\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LandingSection;","import React, { Component } from 'react';\r\nimport '../scss/RegisterSection.scss';\r\n\r\nimport {\r\n    FormGroup, InputGroup, Card, Button, Elevation, Toaster, Toast, Intent,\r\n} from \"@blueprintjs/core\";\r\n\r\ninterface RegisterSectionProps { }\r\n\r\ninterface RegisterSectionState {\r\n    email: string,\r\n    firstName: string,\r\n    lastName: string,\r\n    password: string,\r\n    submitSuccessful: boolean | null\r\n}\r\n\r\nclass RegisterSection extends Component<RegisterSectionProps, RegisterSectionState> {\r\n\r\n    constructor(props: RegisterSectionProps) {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            password: \"\",\r\n            submitSuccessful: null\r\n        }\r\n\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onToastDismissed = this.onToastDismissed.bind(this);\r\n    }\r\n\r\n    onInputChange(event: React.FormEvent<HTMLInputElement>) {\r\n        const target = event.currentTarget;\r\n\r\n        console.log(`${target.name}: ${target.value}`);\r\n\r\n        if ([\"email\", \"firstName\", \"lastName\", \"password\"].includes(target.name)) {\r\n            // @ts-ignore\r\n            this.setState({\r\n                [target.name]: target.value\r\n            });\r\n        } else {\r\n            console.log(`Can't assign name \"${target.name}\" to form.`);\r\n        }\r\n    }\r\n\r\n    onSubmit = async (e: React.FormEvent<HTMLFormElement>): Promise<void> => {\r\n        e.preventDefault();\r\n\r\n        if (this.validateForm()) {\r\n            const submitSuccessful = await this.submitForm();\r\n            this.setState({ ...this.state, submitSuccessful });\r\n        }\r\n    }\r\n\r\n    onToastDismissed() {\r\n        this.setState({ ...this.state, submitSuccessful: null });\r\n    }\r\n\r\n\r\n    validateForm(): boolean {\r\n        // TODO: implement and give user feedback\r\n        return true;\r\n    }\r\n\r\n    async submitForm(): Promise<boolean> {\r\n        try {\r\n            const response = await fetch('/user_api/users', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    email: this.state.email,\r\n                    firstName: this.state.firstName,\r\n                    lastName: this.state.lastName,\r\n                    passwordHash: this.state.password,\r\n                })\r\n            });\r\n\r\n            return response.status === 200;\r\n        } catch (err) {\r\n            console.log(err);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section id=\"register-section\">\r\n                <Card elevation={Elevation.ONE}>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <h1>Register</h1>\r\n                        <FormGroup>\r\n                            <InputGroup name=\"email\" value={this.state.email} onChange={this.onInputChange} leftIcon=\"envelope\" id=\"email-input\" placeholder=\"Email Address\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <InputGroup name=\"firstName\" value={this.state.firstName} onChange={this.onInputChange} leftIcon=\"person\" id=\"firstname-input\" placeholder=\"First Name\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <InputGroup name=\"lastName\" value={this.state.lastName} onChange={this.onInputChange} leftIcon=\"person\" id=\"lastname-input\" placeholder=\"Last Name\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <InputGroup name=\"password\" value={this.state.password} onChange={this.onInputChange} leftIcon=\"lock\" id=\"text-input\" placeholder=\"Password\" type=\"password\" />\r\n                        </FormGroup>\r\n\r\n                        <Button type=\"submit\" fill>Register</Button>\r\n                    </form>\r\n                </Card>\r\n\r\n                {this.state.submitSuccessful === true && (\r\n                    <Toaster><Toast message=\"Registration successful!\" intent={Intent.SUCCESS} onDismiss={this.onToastDismissed} timeout={3000} /></Toaster>\r\n                )}\r\n                {this.state.submitSuccessful === false && (\r\n                    <Toaster><Toast message=\"Registration failed!\" intent={Intent.DANGER} onDismiss={this.onToastDismissed} timeout={3000} /></Toaster>\r\n                )}\r\n            </section >\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterSection;","import React, { Component } from 'react';\r\nimport '../scss/LoginSection.scss';\r\n\r\nimport {\r\n    FormGroup, InputGroup, Card, Button, Elevation, Toaster, Toast, Intent,\r\n} from \"@blueprintjs/core\";\r\n\r\ninterface LoginSectionProps { }\r\n\r\ninterface LoginSectionState {\r\n    email: string,\r\n    password: string,\r\n    loginSuccessful: boolean | null\r\n}\r\n\r\nclass LoginSection extends Component<LoginSectionProps, LoginSectionState> {\r\n\r\n    constructor(props: LoginSectionProps) {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            loginSuccessful: null\r\n        }\r\n\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onToastDismissed = this.onToastDismissed.bind(this);\r\n    }\r\n\r\n    onInputChange(event: React.FormEvent<HTMLInputElement>) {\r\n        const target = event.currentTarget;\r\n\r\n        console.log(`${target.name}: ${target.value}`);\r\n\r\n        if ([\"email\", \"password\"].includes(target.name)) {\r\n            // @ts-ignore\r\n            this.setState({\r\n                [target.name]: target.value\r\n            });\r\n        } else {\r\n            console.log(`Can't assign name \"${target.name}\" to form.`);\r\n        }\r\n    }\r\n\r\n    onSubmit = async (e: React.FormEvent<HTMLFormElement>): Promise<void> => {\r\n        e.preventDefault();\r\n\r\n        if (this.validateForm()) {\r\n            const loginSuccessful = await this.submitForm();\r\n            this.setState({ ...this.state, loginSuccessful });\r\n        }\r\n    }\r\n\r\n    onToastDismissed() {\r\n        this.setState({ ...this.state, loginSuccessful: null });\r\n    }\r\n\r\n\r\n    validateForm(): boolean {\r\n        // TODO: implement and give user feedback\r\n        return true;\r\n    }\r\n\r\n    async submitForm(): Promise<boolean> {\r\n        try {\r\n            const response = await fetch('/user_api/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    email: this.state.email,\r\n                    password: this.state.password,\r\n                })\r\n            });\r\n\r\n            console.log(response);\r\n\r\n            return response.status === 200;\r\n        } catch (err) {\r\n            console.log(err);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section id=\"login-section\">\r\n                <Card elevation={Elevation.ONE}>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <h1>Login</h1>\r\n                        <FormGroup>\r\n                            <InputGroup name=\"email\" value={this.state.email} onChange={this.onInputChange} leftIcon=\"envelope\" id=\"email-input\" placeholder=\"Email Address\" />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <InputGroup name=\"password\" value={this.state.password} onChange={this.onInputChange} leftIcon=\"lock\" id=\"text-input\" placeholder=\"Password\" type=\"password\" />\r\n                        </FormGroup>\r\n\r\n                        <Button type=\"submit\" fill>Login</Button>\r\n                    </form>\r\n                </Card>\r\n\r\n                {this.state.loginSuccessful === true && (\r\n                    <Toaster><Toast message=\"Login successful!\" intent={Intent.SUCCESS} onDismiss={this.onToastDismissed} timeout={3000} /></Toaster>\r\n                )}\r\n                {this.state.loginSuccessful === false && (\r\n                    <Toaster><Toast message=\"Login failed!\" intent={Intent.DANGER} onDismiss={this.onToastDismissed} timeout={3000} /></Toaster>\r\n                )}\r\n            </section >\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginSection;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport LandingSection from './components/LandingSection';\nimport './scss/App.scss';\nimport Register from './components/RegisterSection';\nimport RegisterSection from './components/RegisterSection';\nimport LoginSection from './components/LoginForm';\n\nclass App extends Component {\n  state = {\n    message: null\n  }\n\n  componentDidMount() {\n    // // Make a GET-request to our backend\n    // fetch('/api/hello')\n    //   // Map the result to a JSON-object\n    //   .then(response => response.json())\n    //   // Put the message in the state\n    //   .then(response => {\n    //     this.setState({ message: response.message })\n    //   })\n  }\n\n  render() {\n    return (\n      <div id=\"app\">\n        <LandingSection />\n        <RegisterSection />\n        <LoginSection />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/index.scss';\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}